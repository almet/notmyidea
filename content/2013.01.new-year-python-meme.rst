New year python meme, 2012
##########################

:date: 07-01-2013
:category: tech

This series, also known as "`Tarek Ziadé <http://ziade.org>`_ strikes again",
is a good occasion to take a look back at 2012 and see what I've done related
to python. So, let's try.

**1. What’s the coolest Python application, framework or library you have
discovered in 2012 ?**

I discovered `Pyramid
<http://docs.pylonsproject.org/en/latest/docs/pyramid.html>`_ this year and
quite enjoyed it. I like the way they bring back some nice concepts on the
table, and how they compete with other frameworks. That's nicely decomposed and
everything fits together really well. I learned a bit about its internal
routing mechanism when working on `Cornice <http://cornice.rtfd.org>`_, and
it's really well done.

**2. What new programming technique did you learn in 2012 ?**

I learned about asynchronous programming, something I wasn't really aware of.
(Yes, that's a shame). This was really helpful to understand some bits of
`Circus <http://circus.io>`_. I also started to learn about some related
concepts present in `go <http://golang.org>`_ or in `erlang
<http://erlang.org>`_ with `the actor model
<http://en.wikipedia.org/wiki/Actor_model>`_

**3. Which open source project did you contribute to the most in 2012 ? What did
you do ?**

I worked a bunch on `Cornice <http://cornice.rtfd.org>`_ and `Circus
<http://circus.io>`_, not as much as I would like, but that was two really
interesting projects. For Cornice, I completely `refactored the internals
<http://blog.notmyidea.org/refactoring-cornice.html>`_ back in May, and since
that, I added support for `SPORE <https://github.com/SPORE/specifications>`_
and am currently working on porting it to Python 3 and adding support for `CORS
<http://www.w3.org/TR/cors/>`_. For Circus, I worked on the web interface and
on other bits of the projects related to stats.

I didn't contributed that much to `Pelican <http://getpelican.com>`_, mainly
because I'm less excited about it than I was previously: the project is
working and needs to focus more on code quality than features. We started in
this direction, hopefully it will pay-off; but I committed a lot less code than
previously.

**4. Which Python blog or website did you read the most in 2012 ?**

I really don't know. I found some interesting python-related news on `hacker
news <http://news.ycombinator.com/>`_ and on the printed version as well,
`hacker monthly <http://hackermonthly.com/>`_. Twitter and IRC got me some
interesting articles as well.

**5. What are the three top things you want to learn in 2013 ?**

On the computer science side, I want to learn more about other paradigms, maybe
in other languages. I like python, but I want to learn about other concepts,
maybe some of them don't really fit with python.

For instance, I don't know that much about pattern matching or about the actor
model. Well I know what it is, but I would like to make good use of them in
order to have something nice and useful.

Also, I want to learn how to make a product. From scratch. Which means
designing, implementing and maintaining something. Maybe this will be the case
with `daybed <https://github.com/spiral-project/daybed>`_ ? Who knows.

I want to get better at building communities. Working with others is something
that can be complex and quite hard sometimes. I want to learn how to handle
this better.

On the other side, I want to learn about tons of other non-tech things: taking
pictures, finding a good balance between life and work, working with children,
teaching and animating workshops, writing articles, be better at reading (being
critic when I'm thinking!).

**6. What is the top software, application or library you wish someone would
write in 2013 ?**

The one missing thing, IMO, is a **good** webmail reader, in python. One we
could contribute to, one we could write features for, and one that could come
and compete with gmail, in term of features of UI.

However, most of the time, I'm just impressed by the new ideas that come from
others. I would like to have a library to handle the actor model in a nice way
in Python, I would like to see packaging fixed in python :-)

Want to do your own list? Here's how:

* copy-paste the questions and answer to them in your blog
* tweet it with the #2012pythonmeme hashtag
